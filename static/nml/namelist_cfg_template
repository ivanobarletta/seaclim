!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE eNEATL36 Configuration namelist : overwrite default values defined in SHARED/namelist_ref
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE  :  1 - Domain & run manager (namrun, namcfg, namdom, namtsd, namc1d, namc1d_uvd)
!! namelists    2 - Surface boundary (namsbc, namsbc_flx, namsbc_blk, namsbc_cpl,
!!                                    namsbc_sas, namtra_qsr, namsbc_rnf,
!!                                    namisf, namsbc_apr, 
!!                                    namsbc_ssr, namsbc_wave, namberg)
!!              3 - lateral boundary (namlbc, namagrif, nambdy, nambdy_tide)
!!              4 - top/bot boundary (namdrg, namdrg_top, namdrg_bot, nambbc, nambbl)
!!              5 - Tracer           (nameos, namtra_adv, namtra_ldf, namtra_eiv, namtra_dmp)
!!              6 - dynamics         (namdyn_adv, namdyn_vor, namdyn_hpg, namdyn_spg, namdyn_ldf)
!!              7 - Vertical physics (namzdf, namzdf_ric, namzdf_tke, namzdf_gls, namzdf_iwm)
!!              8 - diagnostics      (namnc4, namtrd, namspr)
!!              9 - Obs & Assim      (namobs, nam_asminc)
!!             10 - miscellaneous    (nammpp, namctl, namsto)
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!!======================================================================
!!              ***  Domain & Run management namelists  ***           !!
!!                                                                    !!
!!   namrun       parameters of the run
!!   namdom       space and time domain
!!   namcfg       parameters of the configuration                       (default: user defined GYRE)
!!   namwad       Wetting and drying                                    (default: OFF)
!!   namtsd       data: temperature & salinity                          (default: OFF)
!!   namc1d       1D configuration options                              (ln_c1d =T)
!!   namc1d_dyndmp 1D newtonian damping applied on currents             (ln_c1d =T)
!!   namc1d_uvd   1D data (currents)                                    (ln_c1d =T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   nn_no       =       0   !  Assimilation cycle index
   cn_exp      = "{MEMBER}eNEATL12_H{HINDCAST_YEAR}_C{CYCLE_NUMBER}" !  experience name
   nn_it000    =  {NN_IT000}  !  first time step
   nn_itend    =  {NN_ITEND}    !  last  time step (std 5840)
   nn_date0    =  {NN_DATE0}  !  date at nit_0000 (format yyyymmdd) used if ln_rstart=F or (ln_rstart=T and nn_rstctl=0 or 1)
   nn_time0    =       0   !  initial time of day in hhmm
   nn_leapy    =       1   !  Leap year calendar (1) or not (0)
   ln_rstart   = .true.    !  start from rest (F) or from a restart file (T)
      nn_rstctl    =    0     !  restart control ==> activated only if ln_rstart=T
      !                          !    = 0 nn_date0 read in namelist ; nn_it000 : read in namelist
      !                          !    = 1 nn_date0 read in namelist ; nn_it000 : check consistancy between namelist and restart
      !                          !    = 2 nn_date0 read in restart  ; nn_it000 : check consistancy between namelist and restart
      cn_ocerst_in    = "restart_oce" !  suffix of ocean restart name (input) 
                                                  ! IVB (the suffix in the namelist remains the same. in the CI 
                                                  ! folder this will be used to point to the actual file through links.) 
      cn_ocerst_indir = "./CI/" !  directory from which to read input ocean restarts
      cn_ocerst_out   = "restart_oce" !  suffix of ocean restart name (output)
      cn_ocerst_outdir =  "RESTART/" !  directory in which to write output ocean restarts
   nn_istate   =       0   !  output the initial state (1) or not (0)
   ln_rst_list = .false.   !  output restarts at list of times using nn_stocklist (T) or at set frequency with nn_stock (F)
   nn_stock    =       0   !  used only if ln_rst_list = F: output restart freqeuncy (modulo referenced to 1)
      !                          !    =  0 force to write restart files only at the end of the run
      !                          !    = -1 do not do any restart
   nn_stocklist = 0,0,0,0,0,0,0,0,0,0 ! List of timesteps when a restart file is to be written
   nn_write    =       0   !  used only if key_xios is not defined: output frequency (modulo referenced to nn_it000)
      !                          !    =  0 force to write output files only at the end of the run
      !                          !    = -1 do not do any output file
   ln_mskland  = .true.    !  mask land points in NetCDF outputs
   ln_cfmeta   = .false.   !  output additional data to netCDF files required for compliance with the CF metadata standard
   ln_clobber  = .true.    !  clobber (overwrite) an existing file
   nn_chunksz  =       0   !  chunksize (bytes) for NetCDF file (works only with iom_nf90 routines)
   ln_xios_read = .false.  !  use XIOS to read restart file (only for a single file restart)
   nn_wxios = 0      !  use XIOS to write restart file 0 - no, 1 - single file output, 2 - multiple file output
   ln_top      = .FALSE.   !  Consider (T) or bypass (F) the TOP routines when the key_top is activated
/
!-----------------------------------------------------------------------
&namdom        !   time and space domain
!-----------------------------------------------------------------------
   rn_Dt       = 900.  !  time step for the dynamics and tracer
   !
   ln_c1d      = .false.   !  Single column domain (1x1pt)              (T => fill namc1d)
   !
   ln_meshmask = .false.   !  =T create a mesh file
   !
   ln_shuman   = .false.   !  =T  shuman averaging active  (RK3 only)
/
!-----------------------------------------------------------------------
&namcfg        !   parameters of the configuration                      (default: use namusr_def in namelist_cfg)
!-----------------------------------------------------------------------
   ln_read_cfg = .true.      !  (=T) read the domain configuration file
      !                      !  (=F) user defined configuration           (F => create/check namusr_def)
      cn_domcfg = "INPUTS/domain_cfg_init.nc"  ! domain configuration filename
      !
      ln_closea    = .false. !  (=T => fill namclo) 
      !                      !  (=F) no control of net precip/evap over closed sea
      !
   ln_write_cfg = .false.    !  (=T) create the domain configuration file
      cn_domcfg_out = "domain_cfg_out" ! newly created domain configuration filename
/
!-----------------------------------------------------------------------
&namtile        !   parameters of the tiling
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namclo        !   parameters of the closed sea (cs) behavior                (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtsd        !    Temperature & Salinity Data  (init/dmp)             (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namwad        !   Wetting and Drying (WaD)                             (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namc1d        !   1D configuration options                             (ln_c1d =T default: PAPA station)
!-----------------------------------------------------------------------
/

!!======================================================================
!!            ***  Surface Boundary Condition namelists  ***          !!
!!                                                                    !!
!!   namsbc          surface boundary condition manager                 (default: NO selection)
!!   namsbc_flx      flux               formulation                     (ln_flx     =T)
!!   namsbc_blk      Bulk formulae formulation                          (ln_blk     =T)
!!   namsbc_cpl      CouPLed            formulation                     ("key_oasis3" )
!!   namsbc_sas      Stand-Alone Surface module                         (SAS_SRC  only)
!!   namsbc_iif      Ice-IF: use observed ice cover                     (nn_ice = 1   )
!!   namtra_qsr      penetrative solar radiation                        (ln_traqsr  =T)
!!   namsbc_ssr      sea surface restoring term (for T and/or S)        (ln_ssr     =T)
!!   namsbc_rnf      river runoffs                                      (ln_rnf     =T)
!!   namsbc_apr      Atmospheric Pressure                               (ln_apr_dyn =T)
!!   namsbc_wave     external fields from wave model                    (ln_wave    =T)
!!   namberg         iceberg floats                                     (ln_icebergs=T)
!!   namsbc_fwb      freshwater-budget adjustment                       (nn_fwb > 0)
!!======================================================================
!
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition manager                   (default: NO selection)
!-----------------------------------------------------------------------
   nn_fsbc     = 1         !  frequency of SBC module call
      !                    !  (control sea-ice & iceberg model call)
                     ! Type of air-sea fluxes
   ln_usr      = .false.   !  user defined formulation                  (T => check usrdef_sbc)
   ln_flx      = .false.   !  flux formulation                          (T => fill namsbc_flx )
   ln_blk      = .true.    !  Bulk formulation                          (T => fill namsbc_blk )
   ln_abl      = .false.   !  ABL  formulation                          (T => fill namsbc_abl )
      !              ! Type of coupling (Ocean/Ice/Atmosphere) :
   ln_cpl      = .false.   !  atmosphere coupled   formulation          ( requires key_oasis3 )
   ln_mixcpl   = .false.   !  forced-coupled mixed formulation          ( requires key_oasis3 )
   nn_components = 0       !  configuration of the opa-sas OASIS coupling
      !                    !  =0 no opa-sas OASIS coupling: default single executable config.
      !                    !  =1 opa-sas OASIS coupling: multi executable config., OCE component
      !                    !  =2 opa-sas OASIS coupling: multi executable config., SAS component
                     ! Sea-ice :
   nn_ice      = 0         !  =0 no ice boundary condition
      !                    !  =1 use observed ice-cover                 (  => fill namsbc_iif )
      !                    !  =2 or 3 for SI3 and CICE, respectively
   ln_ice_embd = .false.   !  =T embedded sea-ice (pressure + mass and salt exchanges)
      !                    !  =F levitating ice (no pressure, mass and salt exchanges)
                     ! Misc. options of sbc :
   ln_traqsr   = .true.    !  Light penetration in the ocean            (T => fill namtra_qsr)
   ln_dm2dc    = .false.   !  daily mean to diurnal cycle on short wave
   ln_ssr      = .false.   !  Sea Surface Restoring on T and/or S       (T => fill namsbc_ssr)
   nn_fwb      = 0         !  FreshWater Budget: =0 unchecked
      !                    !     =1 volume set to zero at each time step
      !                    !     =2 volume adjusted from previous year budget (uniform correction to emp)
      !                    !     =3 volume adjusted from previous year budget (non-uniform correction - proportional to erp)
      !                    !     =4 special treatment for ISOMIP+ test case
   ln_rnf      = .true.    !  runoffs                                   (T => fill namsbc_rnf)
   ln_apr_dyn  = .TRUE.   !  Patm gradient added in ocean & ice Eqs.   (T => fill namsbc_apr )
   ln_wave     = .false.   !  Activate coupling with wave  (T => fill namsbc_wave)
   nn_lsm      = 0         !  =0 land/sea mask for input fields is not applied (keep empty land/sea mask filename field) ,
                           !  =1:n number of iterations of land/sea mask application for input fields (fill land/sea mask filename field)
/
!-----------------------------------------------------------------------
&namsbc_flx    !   surface boundary condition : flux formulation        (ln_flx =T)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_blk    !   namsbc_blk  generic Bulk formula          (ln_blk =T)
!-----------------------------------------------------------------------
   !                    !  bulk algorithm :
   ln_NCAR      = .false.    ! "NCAR"      algorithm   (Large and Yeager 2008)
   ln_COARE_3p0 = .false.    ! "COARE 3.0" algorithm   (Fairall et al. 2003)
   ln_COARE_3p6 = .false.    ! "COARE 3.6" algorithm   (Edson et al. 2013)
   ln_ECMWF     = .true.     ! "ECMWF"     algorithm   (IFS cycle 45r1)
   ln_MFS       = .false.    ! "MFS"       algorithm   (MFS/BS Copernicus, Petenuzzo et al 2010)
   ln_ANDREAS   = .false.    ! "ANDREAS"   algorithm   (Andreas et al. 2015)
      rn_zqt       =  2.     !  Air temperature & humidity reference height (m)
      rn_zu        = 10.     !  Wind vector reference height (m)
      nn_iter_algo = 5       !  Number of iterations in bulk param. algo ("stable ABL + weak wind" requires more)
      ln_skin_cs   = .false. !  use the cool-skin parameterization  => use at least nn_iter_algo > 10
      ln_skin_wl   = .false. !  use the warm-layer parameterization => use at least nn_iter_algo > 10
   !
   rn_pfac    = 1.          !  multipl. factor for precipitation (total & snow)
   rn_efac    = 1.          !  multipl. factor for evaporation (0. or 1.)
   !
   ln_crt_fbk = .true.     !  Add surface current feedback to the wind stress (Renault et al. 2020, doi: 10.1029/2019MS001715)
         rn_stau_a = -2.9e-3   !     Alpha from eq. 10: Stau = Alpha * Wnd + Beta
         rn_stau_b =  8.0e-3   !     Beta 
   !
   ln_humi_sph = .true.  !  humidity "sn_humi" is specific humidity  [kg/kg]
   ln_humi_dpt = .false. !  humidity "sn_humi" is dew-point temperature [K]
   ln_humi_rlh = .false. !  humidity "sn_humi" is relative humidity     [%]
   ln_tair_pot = .false. !  air temperature read in "sn_tair" is already POTENTIAL TEMPERATURE, NOT ABSOLUTE (ECMWF => ln_tair_pot=.false.)
   ln_prec_met = .false. !  precipitation read in "sn_prec" is in [m] 
   !!
   !
   cn_dir      = 'INPUTS/ATM/'      !  root directory for the bulk data location
   !___________!_________________________!___________________!___________!_____________!________!___________!______________________________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ !       weights filename               ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                                      ! pairing  !    filename   !
   sn_wndi     = 'ERA5_BULKU10_3H'        ,        3.        , 'u10'     ,   .true.    , .false., 'monthly' , 'weights_bicubic.nc'                 ,   'U10'  ,      ''
   sn_wndj     = 'ERA5_BULKV10_3H'        ,        3.        , 'v10'     ,   .true.    , .false., 'monthly' , 'weights_bicubic.nc'                 ,   'V10'  ,      ''
   sn_qsr      = 'ERA5_FLUXSSRD_3H'       ,        3.        , 'ssrd'    ,   .false.   , .false., 'monthly' , 'weights_bilinear.nc'                ,     ''   ,      ''
   sn_qlw      = 'ERA5_FLUXSTRD_3H'       ,        3.        , 'strd'    ,   .false.   , .false., 'monthly' , 'weights_bilinear.nc'                ,     ''   ,      ''
   sn_tair     = 'ERA5_BULKTAIR_3H'       ,        3.        , 't2m'     ,   .true.    , .false., 'monthly' , 'weights_bilinear.nc'                ,     ''   ,      ''
   sn_humi     = 'ERA5_BULKHUMI_3H'       ,        3.        , 'q2m'     ,   .true.    , .false., 'monthly' , 'weights_bilinear.nc'                ,     ''   ,      ''
   sn_prec     = 'ERA5_FLUXPRE_3H'        ,        3.        , 'tp'      ,   .false.   , .false., 'monthly' , 'weights_bilinear.nc'                ,     ''   ,      ''
   sn_snow     = 'NOT USED'               ,      -12.        , 'snow'    ,   .false.   , .true. , 'monthly',            ''                         ,     ''   ,      ''
   sn_slp      = 'ERA5_MSLP_3H'           ,        3.        , 'msl'     ,   .true.    , .false., 'monthly' , 'weights_bilinear.nc'                ,     ''   ,      ''
   sn_cc       = 'NOT USED'              , 24.               , 'CC'       , .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''      , ''
   sn_hpgi     = 'NOT USED'              , 24.               , 'uhpg'     , .false.    , .false., 'monthly' , ''                                    , 'UG'    , ''
   sn_hpgj     = 'NOT USED'              , 24.               , 'vhpg'     , .false.    , .false., 'monthly' , ''                                    , 'VG'    , ''
/
!-----------------------------------------------------------------------
&namsbc_abl    !   Atmospheric Boundary Layer formulation           (ln_abl = T)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_cpl    !   coupled ocean/atmosphere model                       ("key_oasis3")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_sas    !   Stand-Alone Surface module: ocean data               (SAS_SRC  only)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_iif    !   Ice-IF : use observed ice cover                      (nn_ice = 1)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation                          (ln_traqsr =T)
!-----------------------------------------------------------------------
   !                       !  type of penetration                        (default: NO selection)
   ln_qsr_rgb  = .false.      !  RGB light penetration (Red-Green-Blue)
   ln_qsr_2bd  = .false.      !  2BD light penetration (two bands)
   ln_qsr_5bd  = .true.       !  5BD light penetration (IR-Red-Green-Blue-UV)
   ln_qsr_bio  = .false.      !  bio-model light penetration
   !                       !  RGB, 2BD & 5BD choices:
   rn_abs      =   0.45       !  RGB & 2BD: fraction absorbed in the very near surface
   rn_si0      =   0.35       !  RGB & 2BD: shortess depth of extinction
   nn_chldta   =      1       !  RGB : 3D Chl data (=2), Surface Chl data (=1) or Cst value (=0)
   rn_si1      =   23.0       !  2BD : longest depth of extinction
   rn_par      =   0.47       !  5BD : fraction of photosynthetically active radiation

   cn_dir      = 'INPUTS/'         !  root directory for data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_chl      ='CHL_eNEATL12'           ,        -1.        ,  'CHL'    ,.true.       , .true. , 'yearly'  , ''               , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring   (ln_ssr =T)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs                                              (ln_rnf =T)
!-----------------------------------------------------------------------
   ln_rnf_mouth = .true.    !  specific treatment at rivers mouths
      rn_hrnf     =   5.e0     !  depth over which enhanced vertical mixing is used    (ln_rnf_mouth=T)
      rn_avt_rnf  =   1.e-3    !  value of the additional vertical mixing coef. [m2/s] (ln_rnf_mouth=T)
   rn_rfact     =   1.e0    !  multiplicative factor for runoff
   ln_rnf_depth = .false.   !  read in depth information for runoff
   ln_rnf_tem   = .false.   !  read in temperature information for runoff
   ln_rnf_sal   = .false.   !  read in salinity information for runoff
   ln_rnf_icb   = .false.   !  read iceberg flux
   ln_rnf_depth_ini = .false.  ! compute depth at initialisation from runoff file
      rn_rnf_max  = 5.735e-4   !  max value of the runoff climatologie over global domain ( ln_rnf_depth_ini = .true )
      rn_dep_max  = 150.       !  depth over which runoffs is spread ( ln_rnf_depth_ini = .true )
      nn_rnf_depth_file = 0    !  create (=1) a runoff depth file or not (=0)

   cn_dir       = 'INPUTS/'         !  root directory for the runoff data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_rnf      = 'runoff_NEMO_ORCA12_V3.5_IBI',    -1        , 'sorunoff',    .true.   , .true. , 'yearly'  ,        ''        ,    ''    ,      ''
   sn_cnf      = 'runoff_NEMO_ORCA12_V3.5_IBI',    -1        , 'socoefr' ,    .false.  , .true. , 'yearly'  ,        ''        ,    ''    ,      ''
/
!-----------------------------------------------------------------------
&namsbc_apr    !   Atmospheric pressure used as ocean forcing           (ln_apr_dyn =T)
!-----------------------------------------------------------------------
   rn_pref     = 100970.   !  reference atmolsspheric pressure   [N/m2]/
   nn_ref_apr  =   2       !  ref. pressure: 0: constant, 1: global mean or 2: read in a file
   ln_apr_obc  = .true.    !  inverse barometer added to OBC ssh data

   cn_dir       = 'INPUTS/ATM/'         !  root directory for the runoff data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_apr      = 'ERA5_MSLP_3H'          ,         3         ,   'msl'   ,   .true.    , .false.,  'monthly', 'weights_bilinear.nc', ''   ,       ''
   sn_apref    = 'pref_series_3H'        ,         3         ,   'msl'   ,   .true.    , .false.,  'yearly' ,         ''           , ''   ,       ''
/
!-----------------------------------------------------------------------
&namisf       !  Top boundary layer (ISF)                               (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_wave   ! External fields from wave model                        (ln_wave=T)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namberg       !   iceberg parameters                                   (default: OFF)
!-----------------------------------------------------------------------
/
!!======================================================================
!!               ***  Lateral boundary condition  ***                 !!
!!                                                                    !!
!!   namlbc        lateral momentum boundary condition                  (default: NO selection)
!!   namagrif      agrif nested grid   (read by child model only)       ("key_agrif")
!!   nam_tide      Tidal forcing                                        (default: OFF)
!!   nambdy        Unstructured open boundaries                         (default: OFF)
!!   nambdy_dta    Unstructured open boundaries - external data         (see  nambdy)
!!   nambdy_tide   tidal forcing at open boundaries                     (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition                  (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  free slip  !   partial slip  !   no slip   ! strong slip
   rn_shlat    =   -100    !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
   ln_vorlat   = .false.   !  consistency of vorticity boundary condition with analytical Eqs.
/
!-----------------------------------------------------------------------
&namagrif      !  AGRIF zoom                                            ("key_agrif")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_tide      !   tide parameters                                      (default: OFF)
!-----------------------------------------------------------------------
   ln_tide     = .true.       ! Activate tides
      nn_tide_var   = 0          !  Variant of tidal parameter set and tide-potential computation
      !                          !     (1: default; 0: compatibility with previous versions)
      ln_tide_pot   = .true.                !  use tidal potential forcing
         rn_tide_gamma = 0.7                   ! Tidal tilt factor
         ln_scal_load  = .false.               ! Use scalar approximation for
            rn_scal_load = 0.094               !     load potential
         ln_read_load  = .true.                ! Or read load potential from file
            ln_sal_fldread = .false.           ! F: use iom T:use fldread
            cn_tide_load = 'INPUTS/tide_LOAD_FES2014_grid_T'  ! filename for load potential
            !
      ln_tide_ramp  = .TRUE.               !  Use linear ramp for tides at startup
         rn_tide_ramp_dt = 0.9              !  ramp duration in days
      sn_tide_cnames(1) = 'M2'               !  name of constituent - all tidal components must be set in namelist_cfg
      sn_tide_cnames(2) = 'S2'
      sn_tide_cnames(3) = 'N2'
      sn_tide_cnames(4) = 'K1'
      sn_tide_cnames(5) = 'O1'
      sn_tide_cnames(6) = 'Q1'
      sn_tide_cnames(7) = 'M4'
      sn_tide_cnames(8) = 'K2'
      sn_tide_cnames(9) = 'P1'
      sn_tide_cnames(10)= 'Mf'
      sn_tide_cnames(11)= 'Mm'
/
!-----------------------------------------------------------------------
&nambdy        !  unstructured open boundaries                          (default: OFF)
!-----------------------------------------------------------------------
   ln_bdy         = .true.    !  Use unstructured open boundaries
   nb_bdy         = 5         !  number of open boundary sets
   ln_coords_file = .false.,.false.,.false.,.false.,.false. !  =T : read bdy coordinates from file
      cn_coords_file = '','','','',''  !  bdy coordinates files
   ln_mask_file   = .false.   !  =T : read mask from file
      cn_mask_file = ''        !  name of mask file (if ln_mask_file=.TRUE.)
   cn_dyn2d       =  'flather','flather','flather','flather','flather'        !
   nn_dyn2d_dta   =  3,3,3,3,3           !  = 0, bdy data are equal to the initial state
                                         !  = 1, bdy data are read in 'bdydata   .nc' files
                                         !  = 2, use tidal harmonic forcing data from files
                                         !  = 3, use external data AND tidal harmonic forcing
   cn_dyn3d      =  'specified','specified','specified','specified','specified'          !
   nn_dyn3d_dta  =  1,1,1,1,1            !  = 0, bdy data are equal to the initial state
   !
   cn_tra        =  'specified','specified','specified','specified','specified'          !
   nn_tra_dta    =  1,1,1,1,1            !  = 0, bdy data are equal to the initial state
                                         !  = 1, bdy data are read in 'bdydata   .nc' files
   cn_trc        =  'specified','specified','specified','specified','specified'          !
   nn_trc_dta    =  1,1,1,1,1            !  = 0, bdy data are equal to the initial state
   !                                     !  = 1, bdy data are read in 'bdydata   .nc' files
   cn_ice        =  'none'    !
   nn_ice_dta    =  0         !  = 0, bdy data are equal to the initial state
   !                          !  = 1, bdy data are read in 'bdydata   .nc' files
   !
   ln_tra_dmp    =.true.,.true.,.true.,.true.,.true.   !  open boudaries conditions for tracers
   ln_trc_dmp    =.true.,.true.,.true.,.true.,.true.   !  open boudaries conditions for tracers
   ln_dyn3d_dmp  =.true.,.true.,.true.,.true.,.true.   !  open boundary condition for baroclinic velocities
   rn_time_dmp     =  1.,1.,1.,1.,1.     ! Damping time scale in days
   rn_time_dmp_out =  1.,1.,1.,1.,1.     ! Outflow damping time scale
   nn_rimwidth   = 10,10,10,10,5         !  width of the relaxation zone
   ln_vol        = .false.    !  total volume correction (see nn_volctl parameter)
   nn_volctl     =  0         !  = 0, the total water flux across open boundaries is zero
/
!-----------------------------------------------------------------------
&nambdy_index  !  structured open boundaries definition     ("key_bdy")
!-----------------------------------------------------------------------
    ctypebdy ='S'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 2                    ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 2                    ! indice of segment start
    nbdyend  = 80                   ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_index  !  structured open boundaries definition     ("key_bdy")
!-----------------------------------------------------------------------
    ctypebdy ='S'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 161                  ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 372                  ! indice of segment start
    nbdyend  = 413                  ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_index  !  structured open boundaries definition     ("key_bdy")
!-----------------------------------------------------------------------
    ctypebdy ='W'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 2                    ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 2                    ! indice of segment start
    nbdyend  = 627                  ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_index  !  structured open boundaries definition     ("key_bdy")
!-----------------------------------------------------------------------
    ctypebdy ='N'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 632                  ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 7                    ! indice of segment start
    nbdyend  = 240                  ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_index  !  structured open boundaries definition     ("key_bdy")
!-----------------------------------------------------------------------
    ctypebdy ='E'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 365                  ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 492                  ! indice of segment start
    nbdyend  = 518                  ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data                         (see nam_bdy)
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir  =    'INPUTS/BDY/'
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh  =    'eNEATL12_obcdta_south_1',         24        ,   'ssh'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_u3d  =    'eNEATL12_obcdta_south_1',         24        ,    'uo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_v3d  =    'eNEATL12_obcdta_south_1',         24        ,    'vo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_tem  =    'eNEATL12_obcdta_south_1',         24        ,  'thetao' ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_sal  =    'eNEATL12_obcdta_south_1',         24        ,    'so'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_dic  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'dic' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_tal  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'alk' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_oxy  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,       'o2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_cal  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,    'caco3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_po4  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'po4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_poc  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'poc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sil  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,       'si' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_phy  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'phy' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_zoo  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'zoo' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_doc  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'doc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dia  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,     'phy2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_mes  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,     'zoo2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dsi  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'dsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_fer  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,       'fe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_bfe  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'bfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_goc  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'goc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sfe  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'sfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dfe  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'dfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_gsi  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'gsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nfe  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'nfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nch  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,     'nchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dch  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,     'dchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_no3  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'no3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nh4  =    'eNEATL36_obcdta_south_1_BIO'   ,168   ,      'nh4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data                       (see nam_bdy)
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir  =    'INPUTS/BDY/'
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh  =    'eNEATL12_obcdta_south_2',         24        ,   'ssh'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_u3d  =    'eNEATL12_obcdta_south_2',         24        ,    'uo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_v3d  =    'eNEATL12_obcdta_south_2',         24        ,    'vo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_tem  =    'eNEATL12_obcdta_south_2',         24        ,  'thetao' ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_sal  =    'eNEATL12_obcdta_south_2',         24        ,    'so'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_dic  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'dic' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_tal  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'alk' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_oxy  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,       'o2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_cal  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,    'caco3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_po4  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'po4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_poc  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'poc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sil  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,       'si' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_phy  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'phy' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_zoo  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'zoo' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_doc  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'doc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dia  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,     'phy2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_mes  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,     'zoo2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dsi  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'dsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_fer  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,       'fe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_bfe  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'bfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_goc  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'goc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sfe  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'sfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dfe  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'dfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_gsi  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'gsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nfe  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'nfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nch  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,     'nchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dch  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,     'dchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_no3  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'no3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nh4  =    'eNEATL36_obcdta_south_2_BIO'   ,168   ,      'nh4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir  =    'INPUTS/BDY/'
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh  =    'eNEATL12_obcdta_west'   ,         24        ,   'ssh'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_u3d  =    'eNEATL12_obcdta_west'   ,         24        ,    'uo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_v3d  =    'eNEATL12_obcdta_west'   ,         24        ,    'vo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_tem  =    'eNEATL12_obcdta_west'   ,         24        ,  'thetao' ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_sal  =    'eNEATL12_obcdta_west'   ,         24        ,    'so'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_dic  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'dic' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_tal  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'alk' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_oxy  =    'eNEATL36_obcdta_west_BIO'    ,168   ,       'o2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_cal  =    'eNEATL36_obcdta_west_BIO'    ,168   ,    'caco3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_po4  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'po4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_poc  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'poc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sil  =    'eNEATL36_obcdta_west_BIO'    ,168   ,       'si' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_phy  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'phy' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_zoo  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'zoo' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_doc  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'doc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dia  =    'eNEATL36_obcdta_west_BIO'    ,168   ,     'phy2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_mes  =    'eNEATL36_obcdta_west_BIO'    ,168   ,     'zoo2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dsi  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'dsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_fer  =    'eNEATL36_obcdta_west_BIO'    ,168   ,       'fe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_bfe  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'bfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_goc  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'goc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sfe  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'sfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dfe  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'dfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_gsi  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'gsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nfe  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'nfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nch  =    'eNEATL36_obcdta_west_BIO'    ,168   ,     'nchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dch  =    'eNEATL36_obcdta_west_BIO'    ,168   ,     'dchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_no3  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'no3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nh4  =    'eNEATL36_obcdta_west_BIO'    ,168   ,      'nh4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir  =    'INPUTS/BDY/'
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh  =    'eNEATL12_obcdta_north'  ,         24        ,   'ssh'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_u3d  =    'eNEATL12_obcdta_north'  ,         24        ,    'uo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_v3d  =    'eNEATL12_obcdta_north'  ,         24        ,    'vo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_tem  =    'eNEATL12_obcdta_north'  ,         24        ,  'thetao' ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_sal  =    'eNEATL12_obcdta_north'  ,         24        ,    'so'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_dic  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'dic' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_tal  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'alk' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_oxy  =    'eNEATL36_obcdta_north_BIO'   ,168   ,       'o2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_cal  =    'eNEATL36_obcdta_north_BIO'   ,168   ,    'caco3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_po4  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'po4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_poc  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'poc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sil  =    'eNEATL36_obcdta_north_BIO'   ,168   ,       'si' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_phy  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'phy' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_zoo  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'zoo' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_doc  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'doc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dia  =    'eNEATL36_obcdta_north_BIO'   ,168   ,     'phy2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_mes  =    'eNEATL36_obcdta_north_BIO'   ,168   ,     'zoo2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dsi  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'dsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_fer  =    'eNEATL36_obcdta_north_BIO'   ,168   ,       'fe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_bfe  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'bfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_goc  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'goc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sfe  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'sfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dfe  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'dfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_gsi  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'gsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nfe  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'nfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nch  =    'eNEATL36_obcdta_north_BIO'   ,168   ,     'nchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dch  =    'eNEATL36_obcdta_north_BIO'   ,168   ,     'dchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_no3  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'no3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nh4  =    'eNEATL36_obcdta_north_BIO'   ,168   ,      'nh4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir  =    'INPUTS/BDY/'
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh  =    'eNEATL12_obcdta_east'   ,         24        ,   'ssh'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_u3d  =    'eNEATL12_obcdta_east'   ,         24        ,    'uo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_v3d  =    'eNEATL12_obcdta_east'   ,         24        ,    'vo'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_tem  =    'eNEATL12_obcdta_east'   ,         24        ,  'thetao' ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_sal  =    'eNEATL12_obcdta_east'   ,         24        ,    'so'   ,    .true.   , .FALSE., 'daily' ,        ''        ,    ''    ,       ''
   bn_dic  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'dic' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_tal  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'alk' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_oxy  =    'eNEATL36_obcdta_east_BIO'   ,168   ,       'o2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_cal  =    'eNEATL36_obcdta_east_BIO'   ,168   ,    'caco3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_po4  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'po4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_poc  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'poc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sil  =    'eNEATL36_obcdta_east_BIO'   ,168   ,       'si' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_phy  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'phy' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_zoo  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'zoo' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_doc  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'doc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dia  =    'eNEATL36_obcdta_east_BIO'   ,168   ,     'phy2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_mes  =    'eNEATL36_obcdta_east_BIO'   ,168   ,     'zoo2' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dsi  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'dsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_fer  =    'eNEATL36_obcdta_east_BIO'   ,168   ,       'fe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_bfe  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'bfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_goc  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'goc' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_sfe  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'sfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dfe  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'dfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_gsi  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'gsi' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nfe  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'nfe' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nch  =    'eNEATL36_obcdta_east_BIO'   ,168   ,     'nchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_dch  =    'eNEATL36_obcdta_east_BIO'   ,168   ,     'dchl' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_no3  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'no3' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
   bn_nh4  =    'eNEATL36_obcdta_east_BIO'   ,168   ,      'nh4' ,     .true.     , .false. ,   'week_wed'  ,    ''    ,   '' ,   ''
/
!-----------------------------------------------------------------------
&nambdy_tide     ! tidal forcing at open boundaries
!-----------------------------------------------------------------------
   filtide      = 'INPUTS/tide_FES2014'            !  file name root of tidal forcing files
   ln_bdytide_2ddta = .TRUE.              ! read data in 2d files on data domain
/
!-----------------------------------------------------------------------
&nambdy_tide     ! tidal forcing at open boundaries
!-----------------------------------------------------------------------
   filtide      = 'INPUTS/tide_FES2014'            !  file name root of tidal forcing files
   ln_bdytide_2ddta = .TRUE.              ! read data in 2d files on data domain
/
!-----------------------------------------------------------------------
&nambdy_tide     ! tidal forcing at open boundaries
!-----------------------------------------------------------------------
   filtide      = 'INPUTS/tide_FES2014'            !  file name root of tidal forcing files
   ln_bdytide_2ddta = .TRUE.              ! read data in 2d files on data domain
/
!-----------------------------------------------------------------------
&nambdy_tide     ! tidal forcing at open boundaries
!-----------------------------------------------------------------------
   filtide      = 'INPUTS/tide_FES2014'            !  file name root of tidal forcing files
   ln_bdytide_2ddta = .TRUE.              ! read data in 2d files on data domain
/
!-----------------------------------------------------------------------
&nambdy_tide     ! tidal forcing at open boundaries
!-----------------------------------------------------------------------
   filtide      = 'INPUTS/tide_FES2014'            !  file name root of tidal forcing files
   ln_bdytide_2ddta = .TRUE.              ! read data in 2d files on data domain
/

!!======================================================================
!!                ***  Top/Bottom boundary condition  ***             !!
!!                                                                    !!
!!   namdrg        top/bottom drag coefficient                          (default: NO selection)
!!   namdrg_top    top    friction                                      (ln_drg_OFF=F & ln_isfcav=T)
!!   namdrg_bot    bottom friction                                      (ln_drg_OFF=F)
!!   nambbc        bottom temperature boundary condition                (default: OFF)
!!   nambbl        bottom boundary layer scheme                         (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namdrg        !   top/bottom drag coefficient                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_drg_OFF  = .false.   !  free-slip       : Cd = 0                  (F => fill namdrg_bot
   ln_lin      = .false.   !      linear  drag: Cd = Cd0 Uc0                   &   namdrg_top)
   ln_non_lin  = .false.   !  non-linear  drag: Cd = Cd0 |U|
   ln_loglayer = .true.    !  logarithmic drag: Cd = vkarmn/log(z/z0) |U|
   !
   ln_drgimp   = .true.    !  implicit top/bottom friction flag
      ln_drgice_imp = .false.! implicit ice-ocean drag
/
!-----------------------------------------------------------------------
&namdrg_top    !   TOP friction                                         (ln_drg_OFF =F & ln_isfcav=T)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdrg_bot    !   BOTTOM friction                                      (ln_drg_OFF =F)
!-----------------------------------------------------------------------
   rn_Cd0      =  2.5e-3   !  drag coefficient [-]
   rn_Uc0      =  0.4      !  ref. velocity [m/s] (linear drag=Cd0*Uc0)
   rn_Cdmax    =  0.1      !  drag value maximum [-] (logarithmic drag)
   rn_ke0      =  0.       !  background kinetic energy  [m2/s2] (non-linear cases)
   rn_z0       =  0.0035   !  roughness [m] (ln_loglayer=T)
   ln_boost    = .false.   !  =T regional boost of Cd0 ; =F constant
      rn_boost =  50.         !  local boost factor  [-]
/
!-----------------------------------------------------------------------
&nambbc        !   bottom temperature boundary condition                (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambbl        !   bottom boundary layer scheme                         (default: OFF)
!-----------------------------------------------------------------------
/

!!======================================================================
!!                        Tracer (T-S) namelists                      !!
!!                                                                    !!
!!   nameos        equation of state                                    (default: NO selection)
!!   namtra_adv    advection scheme                                     (default: NO selection)
!!   namtra_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namtra_mle    mixed layer eddy param. (Fox-Kemper param.)          (default: OFF)
!!   namtra_eiv    eddy induced velocity param.                         (default: OFF)
!!   namtra_dmp    T & S newtonian damping                              (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nameos        !   ocean Equation Of Seawater                           (default: NO selection)
!-----------------------------------------------------------------------
   ln_teos10   = .false.         !  = Use TEOS-10
   ln_eos80    = .true.          !  = Use EOS80
   ln_seos     = .false.         !  = Use S-EOS (simplified Eq.)
                                 !
   !                     ! S-EOS coefficients (ln_seos=T):
   !                             !  rd(T,S,Z)*rho0 = -a0*(1+.5*lambda*dT+mu*Z+nu*dS)*dT+b0*dS
   !                             !    dT = T-rn_T0 ; dS = S-rn_S0
   rn_T0       = 10.             !  reference temperature
   rn_S0       = 35.             !  reference salinity
   rn_a0       =  1.6550e-1      !  thermal expension coefficient
   rn_b0       =  7.6554e-1      !  saline  expension coefficient
   rn_lambda1  =  5.9520e-2      !  cabbeling coeff in T^2  (=0 for linear eos)
   rn_lambda2  =  7.4914e-4      !  cabbeling coeff in S^2  (=0 for linear eos)
   rn_mu1      =  1.4970e-4      !  thermobaric coeff. in T (=0 for linear eos)
   rn_mu2      =  1.1090e-5      !  thermobaric coeff. in S (=0 for linear eos)
   rn_nu       =  2.4341e-3      !  cabbeling coeff in T*S  (=0 for linear eos)
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_traadv_OFF = .false. !  No tracer advection
   ln_traadv_cen = .false. !  2nd order centered scheme
      nn_cen_h   =  4            !  =2/4, horizontal 2nd order CEN / 4th order CEN
      nn_cen_v   =  4            !  =2/4, vertical   2nd order CEN / 4th order COMPACT
   ln_traadv_fct = .true.  !  FCT scheme
      nn_fct_h   =  4            !  =2/4, horizontal 2nd / 4th order
      nn_fct_v   =  4            !  =2/4, vertical   2nd / COMPACT 4th order
      nn_fct_imp =  1            !  =1/2, optimized / accurate treatment of implicit part
   ln_traadv_mus = .false. !  MUSCL scheme
      ln_mus_ups = .false.       !  use upstream scheme near river mouths
   ln_traadv_ubs = .false. !  UBS scheme
      nn_ubs_v   =  2            !  =2  , vertical 2nd order FCT / COMPACT 4th order
   ln_traadv_qck = .false. !  QUICKEST scheme
/
!-----------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers                 (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  Operator type:
   ln_traldf_OFF   = .false.   !  No explicit diffusion
   ln_traldf_lap   = .true.    !    laplacian operator
   ln_traldf_blp   = .false.   !  bilaplacian operator
   !
   !                       !  Direction of action:
   ln_traldf_lev   = .false.   !  iso-level
   ln_traldf_hor   = .false.   !  horizontal  (geopotential)
   ln_traldf_iso   = .true.    !  iso-neutral (standard operator)
   ln_traldf_triad = .false.   !  iso-neutral (triad    operator)
   !
   !		       	         !  iso-neutral options:
   ln_traldf_msc   = .false.   !  Method of Stabilizing Correction      (both operators)
   rn_slpmax       =  0.01     !  slope limit                           (both operators)
   ln_triad_iso    = .false.   !  pure horizontal mixing in ML              (triad only)
   rn_sw_triad     = 0         !  =1 switching triad ; =0 all 4 triads used (triad only)
   ln_botmix_triad = .false.   !  lateral mixing on bottom                  (triad only)
   !
   !                       !  Coefficients:
   nn_aht_ijk_t    = 20        !  space/time variation of eddy coefficient:
      !                             !   =-20 (=-30)    read in eddy_diffusivity_2D.nc (..._3D.nc) file
      !                             !   =  0           constant
      !                             !   = 10 F(k)      =ldf_c1d
      !                             !   = 20 F(i,j)    =ldf_c2d
      !                             !   = 21 F(i,j,t)  =Treguier et al. JPO 1997 formulation
      !                             !   = 30 F(i,j,k)  =ldf_c2d * ldf_c1d
      !                             !   = 31 F(i,j,k,t)=F(local velocity and grid-spacing)
      !                        !  time invariant coefficients:  aht0 = 1/2  Ud*Ld   (lap case)
      !                             !                           or   = 1/12 Ud*Ld^3 (blp case)
      rn_Ud        = 0.018          !  lateral diffusive velocity [m/s] (nn_aht_ijk_t= 0, 10, 20, 30)
      rn_Ld        = 200.e+3        !  lateral diffusive length   [m]   (nn_aht_ijk_t= 0, 10)
/
!-----------------------------------------------------------------------
&namtra_mle    !   mixed layer eddy parametrisation (Fox-Kemper)       (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtra_eiv    !   eddy induced velocity param.                         (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtra_dmp    !   tracer: T & S newtonian damping                      (default: OFF)
!-----------------------------------------------------------------------
/

!!======================================================================
!!                      ***  Dynamics namelists  ***                  !!
!!                                                                    !!
!!   nam_vvl       vertical coordinate options                          (default: z-star)
!!   namdyn_adv    formulation of the momentum advection                (default: NO selection)
!!   namdyn_vor    advection scheme                                     (default: NO selection)
!!   namdyn_hpg    hydrostatic pressure gradient                        (default: NO selection)
!!   namdyn_spg    surface pressure gradient                            (default: NO selection)
!!   namdyn_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namdta_dyn    offline TOP: dynamics read in files                  (OFF_SRC only)
!!======================================================================
!
!-----------------------------------------------------------------------
&nam_vvl       !   vertical coordinate options                          (default: z-star)
!-----------------------------------------------------------------------
   ln_vvl_zstar  = .true.           !  z-star vertical coordinate
   ln_vvl_ztilde = .false.          !  z-tilde vertical coordinate: only high frequency variations
   ln_vvl_layer  = .false.          !  full layer vertical coordinate
   ln_vvl_ztilde_as_zstar = .false. !  ztilde vertical coordinate emulating zstar
   ln_vvl_zstar_at_eqtor  = .false. !  ztilde near the equator
   rn_ahe3       =  0.0             !  thickness diffusion coefficient
   rn_rst_e3t    = 30.0             !  ztilde to zstar restoration timescale [days]
   rn_lf_cutoff  =  5.0             !  cutoff frequency for low-pass filter  [days]
   rn_zdef_max   =  0.9             !  maximum fractional e3t deformation
   ln_vvl_dbg    = .false.          !  debug prints    (T/F)
   nn_vvl_interp =  2               !  interpolation method of scale factor anomalies at U/V/F points
                                    !  =0 linear even at the bottom (old)
                                    !  =1 linear with bottom correction
                                    !  =2 proportionnal to scale factors at rest ("qco" like)
/
!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection                (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynadv_OFF = .false. !  linear dynamics (no momentum advection)
   ln_dynadv_vec = .false. !  vector form - 2nd centered scheme
     nn_dynkeg     = 0        ! grad(KE) scheme: =0   C2  ;  =1   Hollingsworth correction
   ln_dynadv_cen2 = .false. !  flux form - 2nd order centered scheme
   ln_dynadv_up3 = .true.  !  flux form - 3rd order UBS      scheme
/
!-----------------------------------------------------------------------
&namdyn_vor    !   Vorticity / Coriolis scheme                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynvor_ene = .false. !  energy    conserving scheme
   ln_dynvor_ens = .false. !  enstrophy conserving scheme
   ln_dynvor_mix = .false. !  mixed scheme
   ln_dynvor_enT = .false. !  energy conserving scheme (T-point)
   ln_dynvor_een = .true.  !  energy & enstrophy scheme
   !
   ln_dynvor_msk = .false. !  vorticity multiplied by fmask (=T)        ==>>> PLEASE DO NOT ACTIVATE
   !                       !  (f-point vorticity schemes only)
   !
   nn_e3f_typ = 1          !  type of e3f (EEN, ENE, ENS, MIX only)  =0  e3f = mi(mj(e3t))/4
   !                       !                                         =1  e3f = mi(mj(e3t))/mi(mj( tmask))
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option                 (default: NO selection)
!-----------------------------------------------------------------------
   ln_hpg_zco  = .false.   !  z-coordinate - full steps
   ln_hpg_sco  = .true.    !  s-coordinate (standard jacobian formulation)
   ln_hpg_isf  = .false.   !  s-coordinate (sco ) adapted to isf
   ln_hpg_djc  = .false.   !  s-coordinate (Density Jacobian with Cubic polynomial)
      ln_hpg_djc_vnh = .true.  !  hor.  bc type for djc scheme (T=von Neumann, F=linear extrapolation)
      ln_hpg_djc_vnv = .true.  !  vert. bc type for djc scheme (T=von Neumann, F=linear extrapolation)
   ln_hpg_prj  = .false.   !  s-coordinate (Pressure Jacobian scheme)
/
!-----------------------------------------------------------------------
&namdyn_spg    !   surface pressure gradient                            (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynspg_exp  = .false.   ! explicit free surface
   ln_dynspg_ts   = .true.    ! split-explicit free surface
      nn_bt_flt     = 1          ! Add dissipation with either boxcar averaging or dissipative Forward-Backward
      !                          !                     = 0 None
      !                          !                     = 1 Boxcar over   nn_e sub-steps
      !                          !                     = 2 Boxcar over 2*nn_e  "    "
      !                          !                     = 3 Temporal dissipation (Demange 2019)
      rn_bt_alpha   =  0.           ! (if nn_bt_flt=3) ==> Temporal diffusion parameter (recommended values = 0.07-0.09)
      !
      ln_bt_auto    = .true.     ! Number of sub-step defined from:
         rn_bt_cmax   =  0.8        ! =T : the Maximum Courant Number allowed
         nn_e         =  30         ! =F : the number of sub-step in rn_Dt seconds
/
!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum                        (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  Type of the operator :
   ln_dynldf_OFF = .true.      !  No operator (i.e. no explicit diffusion)
   nn_dynldf_typ = 0           !  =0 div-rot (default)   ;   =1 symmetric
   ln_dynldf_lap = .false.     !    laplacian operator
   ln_dynldf_blp = .false.     !  bilaplacian operator
   !                       !  Direction of action  :
   ln_dynldf_lev = .false.     !  iso-level
   ln_dynldf_hor = .true.      !  horizontal  (geopotential)
   ln_dynldf_iso = .false.     !  iso-neutral (lap only)
   !                       !  Coefficient
   nn_ahm_ijk_t  = 20          !  space/time variation of eddy coefficient :
      !                             !  =-30  read in eddy_viscosity_3D.nc file
      !                             !  =-20  read in eddy_viscosity_2D.nc file
      !                             !  =  0  constant
      !                             !  = 10  F(k)=c1d
      !                             !  = 20  F(i,j)=F(grid spacing)=c2d
      !                             !  = 30  F(i,j,k)=c2d*c1d
      !                             !  = 31  F(i,j,k)=F(grid spacing and local velocity)
      !                             !  = 32  F(i,j,k)=F(local gridscale and deformation rate)
      !                        !  time invariant coefficients :  ahm = 1/2  Uv*Lv   (lap case)
      !                             !                            or  = 1/12 Uv*Lv^3 (blp case)
      rn_Uv      = 0.14             !  lateral viscous velocity [m/s] (nn_ahm_ijk_t= 0, 10, 20, 30)
      rn_Lv      = 10.e+3           !  lateral viscous length   [m]   (nn_ahm_ijk_t= 0, 10)
      !                       !  Smagorinsky settings  (nn_ahm_ijk_t= 32) :
      rn_csmc       = 3.5         !  Smagorinsky constant of proportionality
      rn_minfac     = 1.0         !  multiplier of theorectical lower limit
      rn_maxfac     = 1.0         !  multiplier of theorectical upper limit
      !                       !  iso-neutral laplacian operator (ln_dynldf_iso=T) :
      rn_ahm_b      = 0.0         !  background eddy viscosity  [m2/s]
/
!-----------------------------------------------------------------------
&namdta_dyn    !   offline ocean input files                            (OFF_SRC only)
!-----------------------------------------------------------------------
/

!!======================================================================
!!                     vertical physics namelists                     !!
!!                                                                    !!
!!    namzdf        vertical physics manager                            (default: NO selection)
!!    namzdf_ric    richardson number vertical mixing                   (ln_zdfric=T)
!!    namzdf_tke    TKE vertical mixing                                 (ln_zdftke=T)
!!    namzdf_gls    GLS vertical mixing                                 (ln_zdfgls=T)
!!    namzdf_osm    OSM vertical diffusion                              (ln_zdfosm=T)
!!    namzdf_iwm    tidal mixing parameterization                       (ln_zdfiwm=T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namzdf        !   vertical physics manager                             (default: NO selection)
!-----------------------------------------------------------------------
   !                       ! adaptive-implicit vertical advection
   ln_zad_Aimp = .true.       !  Courant number dependent scheme (Shchepetkin 2015)
   !
   !                       ! type of vertical closure (required)
   ln_zdfcst   = .false.      !  constant mixing
   ln_zdfric   = .false.      !  local Richardson dependent formulation (T =>   fill namzdf_ric)
   ln_zdftke   = .false.      !  Turbulent Kinetic Energy closure       (T =>   fill namzdf_tke)
   ln_zdfgls   = .true.       !  Generic Length Scale closure           (T =>   fill namzdf_gls)
   ln_zdfosm   = .false.      !  OSMOSIS BL closure                     (T =>   fill namzdf_osm)
   !
   !                       ! convection
   ln_zdfevd   = .false.      !  enhanced vertical diffusion
      nn_evdm     =    0         ! apply on tracer (=0) or on tracer and momentum (=1)
      rn_evd      =  100.        ! mixing coefficient [m2/s]
   ln_zdfnpc   = .false.      !  Non-Penetrative Convective algorithm
      nn_npc      =    1         ! frequency of application of npc
      nn_npcp     =  365         ! npc control print frequency
   ln_zdfmfc   = .false.      !  Mass Flux Convection
   !
   ln_zdfddm   = .false.   ! double diffusive mixing
      rn_avts  =    1.e-4     !  maximum avs (vertical mixing on salinity)
      rn_hsbfr =    1.6       !  heat/salt buoyancy flux ratio
   !
   !                       ! gravity wave-driven vertical mixing
   ln_zdfiwm   = .true.       ! internal wave-induced mixing            (T =>   fill namzdf_iwm)
   ln_zdfswm   = .false.      ! surface  wave-induced mixing            (T => ln_wave=ln_sdw=T )
   !
   !                       ! coefficients
   rn_avm0     =   1.4e-7     !  vertical eddy viscosity   [m2/s]       (background Kz if ln_zdfcst=F)
   rn_avt0     =   1.3e-6     !  vertical eddy diffusivity [m2/s]       (background Kz if ln_zdfcst=F)
   nn_avb      =    0         !  profile for background avt & avm (=1) or not (=0)
   nn_havtb    =    0         !  horizontal shape for avtb (=1) or not (=0)
/
!-----------------------------------------------------------------------
&namzdf_ric    !   richardson number dependent vertical diffusion       (ln_zdfric =T)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_tke    !   turbulent eddy kinetic dependent vertical diffusion  (ln_zdftke =T)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_gls    !   GLS vertical diffusion                               (ln_zdfgls =T)
!-----------------------------------------------------------------------
   rn_emin       = 1.e-10  !  minimum value of e   [m2/s2]
   rn_epsmin     = 1.e-12  !  minimum value of eps [m2/s3]
   ln_length_lim = .true.  !  limit on the dissipation rate under stable stratification (Galperin et al., 1988)
   rn_clim_galp  = 0.267   !  galperin limit
   ln_sigpsi     = .true.  !  Activate or not Burchard 2001 mods on psi schmidt number in the wb case
   rn_crban      = 100.    !  Craig and Banner 1994 constant for wb tke flux
   rn_charn      = 70000.  !  Charnock constant for wb induced roughness length
   rn_hsro       =  0.02   !  Minimum surface roughness
   rn_hsri       =  0.03   !  Ice-ocean roughness
   rn_frac_hs    =   1.3   !  Fraction of wave height as roughness (if nn_z0_met>1)
   nn_z0_met     =     2   !  Method for surface roughness computation (0/1/2/3)
   !                       !     = 3 requires ln_wave=T
   nn_z0_ice     =   2     !  attenutaion of surface wave breaking under ice
   !                       !           = 0 no impact of ice cover
   !                       !           = 1 roughness uses rn_hsri and is weigthed by 1-TANH(10*fr_i)
   !                       !           = 2 roughness uses rn_hsri and is weighted by 1-fr_i
   !                       !           = 3 roughness uses rn_hsri and is weighted by 1-MIN(1,4*fr_i)
   nn_mxlice     =     0   !  mixing under sea ice
                           !     = 0 No scaling under sea-ice
                           !     = 1 scaling with constant Ice-ocean roughness (rn_hsri)
                           !     = 2 scaling with mean sea-ice thickness
                           !     = 3 scaling with max sea-ice thickness
   nn_bc_surf    =     1   !  surface condition (0/1=Dir/Neum)
   nn_bc_bot     =     1   !  bottom condition (0/1=Dir/Neum)
   nn_stab_func  =     2   !  stability function (0=Galp, 1= KC94, 2=CanutoA, 3=CanutoB)
   nn_clos       =     1   !  predefined closure type (0=MY82, 1=k-eps, 2=k-w, 3=Gen)
/
!-----------------------------------------------------------------------
&namzdf_osm    !   OSM vertical diffusion                               (ln_zdfosm =T)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namosm_mle    !   mixed layer eddy parametrisation (Fox-Kemper)       (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_mfc     !   Mass Flux Convection
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_iwm    !    internal wave-driven mixing parameterization        (ln_zdfiwm =T)
!-----------------------------------------------------------------------
   ln_mevar    =     .true.  !  variable (T) or constant (F) mixing efficiency
   ln_tsdiff   =     .true.  !  account for differential T/S mixing (T) or not (F)
   ln_bkg_unstable = .true.  !  apply background diffusivity in unstable case (T) or not (F)

   cn_dir      = 'INPUTS/'      !  root directory for the iwm data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_mpb      = 'zdfiwm_forcing_regular',        -12        ,'power_bot',    .false.  , .true. , 'yearly' , 'weights_bilinear_tmx.nc' , ''  , ''
   sn_mpc      = 'zdfiwm_forcing_regular',        -12.       ,'power_cri',    .false.  , .true. , 'yearly' , 'weights_bilinear_tmx.nc' , ''  , ''
   sn_mpn      = 'zdfiwm_forcing_regular',        -12.       ,'power_nsq',    .false.  , .true. , 'yearly' , 'weights_bilinear_tmx.nc' , ''  , ''
   sn_mps      = 'zdfiwm_forcing_regular',        -12.       ,'power_sho',    .false.  , .true. , 'yearly' , 'weights_bilinear_tmx.nc' , ''  , ''
   sn_dsb      = 'zdfiwm_forcing_regular',        -12.       ,'scale_bot',    .false.  , .true. , 'yearly' , 'weights_bilinear_tmx.nc' , ''  , ''
   sn_dsc      = 'zdfiwm_forcing_regular',        -12.       ,'scale_cri',    .false.  , .true. , 'yearly' , 'weights_bilinear_tmx.nc' , ''  , ''
/
!!======================================================================
!!                  ***  Diagnostics namelists  ***                   !!
!!                                                                    !!
!!   namtrd       dynamics and/or tracer trends                         (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   nam_diadct   transports through some sections                      (default: OFF)
!!   namnc4       netcdf4 chunking and compression settings
!!======================================================================
!
!-----------------------------------------------------------------------
&namtrd        !   trend diagnostics                                    (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdiu        !   Cool skin and warm layer models                      (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_diadct    !   transports through some sections                     (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namnc4        !   netcdf4 chunking and compression settings
!-----------------------------------------------------------------------
   nn_nchunks_i =   4       !  number of chunks in i-dimension
   nn_nchunks_j =   4       !  number of chunks in j-dimension
   nn_nchunks_k =   31      !  number of chunks in k-dimension
   !                       !  setting nn_nchunks_k = jpk will give a chunk size of 1 in the vertical which
   !                       !  is optimal for postprocessing which works exclusively with horizontal slabs
   ln_nc4zip   = .false.   !  (T) use netcdf4 chunking and compression
   !                       !  (F) ignore chunking and compression information (netcdf3 compatible file)
/

!!======================================================================
!!               ***  Observation & Assimilation  ***                 !!
!!                                                                    !!
!!   namobs       observation and model comparison                      (default: OFF)
!!   namobs_dta   observation and model comparison - external data      (see: namobs)
!!   nam_asminc   assimilation increments                               ('key_asminc')
!!======================================================================
!
!-----------------------------------------------------------------------
&namobs        !  observation usage switch                              (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_asminc    !   assimilation increments                              ('key_asminc')
!-----------------------------------------------------------------------
/

!!======================================================================
!!                  ***  Miscellaneous namelists  ***                 !!
!!                                                                    !!
!!   nammpp            Massively Parallel Processing
!!   namctl            Control prints                                   (default: OFF)
!!   namsto            Stochastic parametrization of EOS                (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing
!-----------------------------------------------------------------------
   ln_listonly =  .false.  !  do nothing else than listing the best domain decompositions (with land domains suppression)
   !                       !  if T: the largest number of cores tested is defined by max(mppsize, jpni*jpnj)
   ln_nnogather =  .true.  !  activate code to avoid mpi_allgather use at the northfold
   ln_mppdelay  =  .true.  !  activate delayed global communications to go faster
   jpni        =   0       !  jpni   number of processors following i (set automatically if < 1)
   jpnj        =   0       !  jpnj   number of processors following j (set automatically if < 1)
   nn_hls      =   2       !  halo width (applies to both rows and columns)
   nn_comm     =   1       !  comm choice
/
!-----------------------------------------------------------------------
&namctl        !   Control prints                                       (default: OFF)
!-----------------------------------------------------------------------
   sn_cfctl%l_runstat = .FALSE.    ! switches and which areas produce reports with the proc integer settings.
   sn_cfctl%l_trcstat = .FALSE.   ! The default settings for the proc integers should ensure
   sn_cfctl%l_oceout  = .FALSE.   ! that  all areas report.
   sn_cfctl%l_layout  = .FALSE.   !
   sn_cfctl%l_prtctl  = .FALSE.   !
   sn_cfctl%l_prttrc  = .FALSE.   !
   sn_cfctl%l_oasout  = .FALSE.   !
   sn_cfctl%l_obsstat = .FALSE.   !
   sn_cfctl%procmin   = 0         ! Minimum area number for reporting [default:0]
   sn_cfctl%procmax   = 1000000   ! Maximum area number for reporting [default:1000000]
   sn_cfctl%procincr  = 1         ! Increment for optional subsetting of areas [default:1]
   sn_cfctl%ptimincr  = 1         ! Timestep increment for writing time step progress info
   nn_ictls    =    0             !  start i indice of control sum (use to compare mono versus
   nn_ictle    =    0             !  end   i indice of control sum        multi processor runs
   nn_jctls    =    0             !  start j indice of control               over a subdomain)
   nn_jctle    =    0             !  end   j indice of control
   nn_isplt    =    1             !  number of processors in i-direction
   nn_jsplt    =    1             !  number of processors in j-direction
   ln_timing   = .false.          !  timing by routine write out in timing.output file
   ln_diacfl   = .false.          !  CFL diagnostics write out in cfl_diagnostics.ascii
/
!-----------------------------------------------------------------------
&namsto        ! Stochastic parametrization of EOS                      (default: OFF)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namar5    !   ar5 diagnostics
!-----------------------------------------------------------------------
   ln_sshstr = .false.   ! write the time evolution of the total steric heigth compared to an original state (needs nn_tsref =2)
   ln_tsread = .true.    !  read a TS file for density reference
   cn_dir    = 'INPUTS/'      !  root directory for the location of the CI files
   !_____ !_________________________!___________________!___________!______________!________!___________!__________!__________!_______________!
   !      !  file name              ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
   !      !                         !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_tem =  'restart_{HINDCAST_YEAR}{START_MONTH_DAY}.nc'  ,        -12        ,    'tn'   ,    .false.   , .true. ,  'yearly' ,    ''    ,    ''    ,    ''
   sn_sal =  'restart_{HINDCAST_YEAR}{START_MONTH_DAY}.nc'  ,        -12        ,    'sn'   ,    .false.   , .true. ,  'yearly' ,    ''    ,    ''    ,    ''
/
